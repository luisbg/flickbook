#!/usr/bin/python
#
#  Copyright Luis de Bethencourt Guimera, Andrew Hunter 2008
#
#    This program is free software; you may redistribute it and/or modify it
#    under the terms of the GNU General Public License as published by the Free 
#    Software Foundation; either version 2 of the License, or (at your option) 
#    any later version.
#
#    This program is distributed in the hope that it will be useful, but WITHOUT
#    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
#    FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for 
#    more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

try:
    import gtk
    import pygtk
    import gobject
    import os
    from gtk import glade
    import flickroll
except:
    import_error = gtk.MessageDialog (None, gtk.DIALOG_MODAL, gtk.MESSAGE_ERROR, \
        gtk.BUTTONS_OK, ('You need to install python bindings for gtk and/or glade \
        ("python-gtk2 & python-glade2" in debian/ubuntu)'))
    import_error.run()
    sys.exit(1)

class FlickBook:
    def __init__(self):
        self.gladefile = "gui.glade"
        self.wTree = gtk.glade.XML(self.gladefile)
        self.window = self.wTree.get_widget("mainWindow")
        self.image = self.wTree.get_widget("image")
        self.tagEntry = self.wTree.get_widget("tagEntry")

        dic = { "on_newThreadButton_clicked" : self.new_thread,
            "on_mainWindow_destroy" : gtk.main_quit}
        self.wTree.signal_autoconnect(dic)

        self.counter = 0
        self.flickroll = flickroll.FlickRoll()
        self.flickroll.get_first_photo()
        self.next(self.image)
        self.time_id = gobject.timeout_add(10000, self.time_out_cb)

    def next(self, widget):
        filename = '%d.jpg' % self.counter
        tag = self.flickroll.get_next_photo(filename)
        pixbuf = gtk.gdk.pixbuf_new_from_file_at_size(filename, 600, 600)
        self.image.set_from_pixbuf(pixbuf)
        
        self.tagEntry.set_text(tag)

        if self.counter < 10:
            self.counter += 1
        else:
            self.counter = 0

    def new_thread(self, widget):
        self.flickroll.get_first_photo()

    def time_out_cb(self):
        try:
            self.next(self.image)
            return True
        except AttributeError:
            self.flickroll.get_first_photo()

if __name__ == "__main__":
    flickbook = FlickBook()
    gtk.main()       
