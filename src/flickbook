#!/usr/bin/python
#
#  Copyright Luis de Bethencourt Guimera, Andrew Hunter 2008
#
#    This program is free software; you may redistribute it and/or modify it
#    under the terms of the GNU General Public License as published by the Free 
#    Software Foundation; either version 2 of the License, or (at your option) 
#    any later version.
#
#    This program is distributed in the hope that it will be useful, but WITHOUT
#    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
#    FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for 
#    more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

try:
    import gtk
    import pygtk
    import gobject
    import os
    from gtk import glade
    import flickroll
    import threading
except:
    import_error = gtk.MessageDialog (None, gtk.DIALOG_MODAL, gtk.MESSAGE_ERROR, \
        gtk.BUTTONS_OK, ('You need to install python bindings for gtk and/or glade \
        ("python-gtk2 & python-glade2" in debian/ubuntu)'))
    import_error.run()
    sys.exit(1)

class FlickBook:
    def __init__(self):
        self.gladefile = "gui.glade"
        self.wTree = gtk.glade.XML(self.gladefile)
        self.window = self.wTree.get_widget("mainWindow")
        self.image = self.wTree.get_widget("image")
        self.pitchScale = self.wTree.get_widget("pitchScale")

        dic = { "on_newThreadButton_clicked" : self.next,
            "on_pitchScale_value_changed" : self.pitchChange,
            "on_mainWindow_destroy" : gtk.main_quit}
        self.wTree.signal_autoconnect(dic)

        pixbuf = gtk.gdk.pixbuf_new_from_file_at_size('../files/flickbook.jpg', 600, 600)
        self.image.set_from_pixbuf(pixbuf)

        self.flickroll = flickroll.FlickRoll()
        self.flickroll.get_first_photo()
        self.pitch = 30
        self.loop_amount = 42
        self.c = 0
        self.i = 0
        self.flickroll_loop()
        self.time_id = gobject.timeout_add(2000, self.time_out_cb)

    def next(self, widget):
        file = '%d.jpg' % self.c
        if os.path.exists(file):
            pixbuf = gtk.gdk.pixbuf_new_from_file_at_size(file, 600, 600)
            self.image.set_from_pixbuf(pixbuf) 
        if self.c < self.loop_amount:
            self.c += 1
        else:
            self.c = 0

    def new_thread(self, widget):
        self.flickroll.get_first_photo()

    def flickroll_loop(self):
        filename = '%d.jpg' % self.i
        self.flickroll.get_next_photo(filename)
        if self.i < self.loop_amount:
            self.i = self.i + 1
        else:
            self.i = 0

    def pitchChange(self, value):
        pass

    def time_out_cb(self):
        self.flickroll_loop()
        self.next(self.image)
        if self.pitch != self.pitchScale.get_value():
            self.pitch = self.pitchScale.get_value()
            self.time_id = gobject.timeout_add(int(60000 / self.pitch), self.time_out_cb)
            return False
        else:
            return True

if __name__ == "__main__":
    flickbook = FlickBook()
    gtk.gdk.threads_init()
    gtk.main()
